var N=null,E="",T="t",U="u",searchIndex={};
var R=["fallible","kubernix","result","try_from","try_into","borrow_mut","borrow","type_id","typeid","config","Kubernix"];
searchIndex["kubernix"]={"doc":R[1],"i":[[3,"Config",R[1],"The global configuration",N,N],[12,"root",E,"The root path during runtime",0,N],[12,"log",E,"The logger configuration",0,N],[12,"pki",E,"The PKI configuration",0,N],[12,"kube",E,"The Kube configuration",0,N],[12,"crio",E,"The CRI-O configuration",0,N],[3,R[10],E,"The main structure for the application",N,N],[11,"from_file_or_default",E,"Creates a new `Config` instance using the parameters foundâ€¦",0,[[["str"]],[R[0]]]],[11,"start",E,"Start kubernix by consuming the provided configuration",1,[[[R[9]]],[[R[0],[R[1]]],[R[1]]]]],[11,"stop",E,"Stop kubernix by cleaning up all running processes",1,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"to_owned",E,E,0,[[["self"]],[T]]],[11,"clone_into",E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,R[3],E,E,0,[[[U]],[R[2]]]],[11,R[4],E,E,0,[[],[R[2]]]],[11,R[5],E,E,0,[[["self"]],[T]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[R[8]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[3],E,E,1,[[[U]],[R[2]]]],[11,R[4],E,E,1,[[],[R[2]]]],[11,R[5],E,E,1,[[["self"]],[T]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[R[8]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"default",E,E,0,[[],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[9]]]],[11,"fmt",E,E,0,[[["self"],["formatter"]],[R[2]]]],[11,"deserialize",E,E,0,[[["__d"]],[R[2]]]]],"p":[[3,"Config"],[3,R[10]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);